import telebot
from telebot import types
import smtplib
from email.mime.text import MIMEText
import time

# توكن البوت
TOKEN = '8302324300:AAEo6-_hRR1ljQ-mJ19KT-5R2AGjItAzJB4'
bot = telebot.TeleBot(TOKEN)

# المالك
OWNER_ID = 6007494337
OWNER_USERNAME = "@adamkairim"

# بيانات المستخدمين
user_data = {}
authorized_users = {OWNER_ID}

# زر البداية
@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.id not in authorized_users:
        bot.send_message(message.chat.id, f"❌ لا يمكنك استخدام هذا البوت.\nاطلب من المالك صلاحية الاستخدام: {OWNER_USERNAME}")
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("📧 إضافة حساب إيميل", "🚀 بدئ الشد")
    bot.send_message(message.chat.id, "اختر خيار:", reply_markup=markup)

# أمر الإدارة
@bot.message_handler(commands=['admin'])
def admin_add_user(message):
    if message.from_user.id != OWNER_ID:
        return
    bot.send_message(message.chat.id, "أرسل معرف المستخدم الجديد:")
    bot.register_next_step_handler(message, add_user)

def add_user(message):
    try:
        user_id = int(message.text)
        authorized_users.add(user_id)
        bot.send_message(message.chat.id, f"✅ تم إضافة {user_id} بنجاح.")
    except:
        bot.send_message(message.chat.id, "❌ المعرف غير صالح.")

# زر إضافة حساب
@bot.message_handler(func=lambda m: m.text == "📧 إضافة حساب إيميل")
def get_email(message):
    if message.from_user.id not in authorized_users:
        return
    bot.send_message(message.chat.id, "أرسل الإيميل:")
    bot.register_next_step_handler(message, get_app_password)

def get_app_password(message):
    email = message.text
    user_data[message.from_user.id] = {'email': email}
    bot.send_message(message.chat.id, "أرسل كلمة مرور التطبيقات:")
    bot.register_next_step_handler(message, save_password)

def save_password(message):
    password = message.text
    user_data[message.from_user.id]['password'] = password
    bot.send_message(message.chat.id, "✅ تم حفظ الحساب بنجاح.")

# زر بدء الشد
@bot.message_handler(func=lambda m: m.text == "🚀 بدئ الشد")
def start_spam(message):
    if message.from_user.id not in authorized_users:
        return

    if message.from_user.id not in user_data:
        bot.send_message(message.chat.id, "❌ أضف حساب إيميل أولاً.")
        return

    bot.send_message(message.chat.id, "📝 أرسل موضوع الرسالة:")
    bot.register_next_step_handler(message, get_subject)

def get_subject(message):
    user_data[message.from_user.id]['subject'] = message.text
    bot.send_message(message.chat.id, "✉️ أرسل محتوى الرسالة:")
    bot.register_next_step_handler(message, get_body)

def get_body(message):
    user_data[message.from_user.id]['body'] = message.text
    bot.send_message(message.chat.id, "📮 أرسل الإيميلات المستلمة (كل إيميل في سطر):")
    bot.register_next_step_handler(message, get_receivers)

def get_receivers(message):
    receivers = message.text.strip().split('\n')
    user_data[message.from_user.id]['receivers'] = receivers
    bot.send_message(message.chat.id, "🔁 كم عدد المرات؟")
    bot.register_next_step_handler(message, get_count)

def get_count(message):
    try:
        count = int(message.text)
        user_data[message.from_user.id]['count'] = count
        bot.send_message(message.chat.id, "⏱️ كم ثانية بين كل رسالة؟")
        bot.register_next_step_handler(message, get_delay)
    except:
        bot.send_message(message.chat.id, "❌ أدخل عدد صحيح.")
        bot.register_next_step_handler(message, get_count)

def get_delay(message):
    try:
        delay = float(message.text)
        user_data[message.from_user.id]['delay'] = delay
        bot.send_message(message.chat.id, "🚀 بدأ الإرسال...")
        send_emails(message)
    except:
        bot.send_message(message.chat.id, "❌ أدخل رقم صحيح.")
        bot.register_next_step_handler(message, get_delay)

def send_emails(message):
    data = user_data[message.from_user.id]
    email = data['email']
    password = data['password']
    subject = data['subject']
    body = data['body']
    receivers = data['receivers']
    count = data['count']
    delay = data['delay']

    success = 0
    fail = 0

    try:
        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login(email, password)
    except:
        bot.send_message(message.chat.id, "❌ فشل تسجيل الدخول. ربما تم حظر الحساب.")
        return

    for i in range(count):
        for to_email in receivers:
            try:
                msg = MIMEText(body)
                msg['Subject'] = subject
                msg['From'] = email
                msg['To'] = to_email
                server.sendmail(email, to_email, msg.as_string())
                success += 1
            except:
                fail += 1

        bot.send_message(message.chat.id, f"📨 الإرسال رقم {i+1}/{count} ✅:{success} ❌:{fail}")
        time.sleep(delay)

    server.quit()
    bot.send_message(message.chat.id, f"✅ تم الانتهاء من الإرسال.\n✅ ناجحة: {success} ❌ فاشلة: {fail}")

# تشغيل البوت
print("🤖 Bot is running...")
bot.infinity_polling()
